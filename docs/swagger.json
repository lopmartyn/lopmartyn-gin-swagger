{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/employee/create/": {
            "post": {
                "description": "insert employee information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Insert employee data",
                "parameters": [
                    {
                        "description": "Create employee",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "404": {
                        "description": "A Employee was not found",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    }
                }
            }
        },
        "/employee/delete/{employeeID}": {
            "delete": {
                "description": "delete employee information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Delete employee data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "employeeID of employee to get the data",
                        "name": "employeeID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "404": {
                        "description": "A Employee was not found",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    }
                }
            }
        },
        "/employee/get/{employeeID}": {
            "get": {
                "description": "get employee information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Get employee data by Employee ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "employeeID of employee to get the data",
                        "name": "employeeID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "404": {
                        "description": "A Employee was not found",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    }
                }
            }
        },
        "/employee/update/": {
            "put": {
                "description": "update employee information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Update employee data",
                "parameters": [
                    {
                        "description": "Update employee",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "404": {
                        "description": "A Employee was not found",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    }
                }
            }
        },
        "/gender/get/all": {
            "get": {
                "description": "get gender information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gender"
                ],
                "summary": "Get all gender data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Gender"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "404": {
                        "description": "A Gender was not found",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "description": "Create registers by record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "Create supplier",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Users"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Users"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "404": {
                        "description": "A User ID with the specified ID was not found",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/get/all": {
            "get": {
                "description": "get user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all user data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Users"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "404": {
                        "description": "A Gender was not found",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "helper.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 999
                },
                "message": {
                    "type": "string",
                    "example": "example response"
                }
            }
        },
        "model.Employee": {
            "type": "object",
            "properties": {
                "departmentID": {
                    "type": "integer"
                },
                "empID": {
                    "type": "string",
                    "example": "EMP-xxxx"
                },
                "firstName": {
                    "type": "string",
                    "example": "Firstname"
                },
                "genderID": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string",
                    "example": "Lastname"
                },
                "phoneNo": {
                    "type": "string",
                    "example": "02-000-0000"
                },
                "requestID": {
                    "type": "string",
                    "example": "REQ-xxxx"
                },
                "titleID": {
                    "type": "integer"
                }
            }
        },
        "model.Gender": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Users": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}